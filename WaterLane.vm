function WaterLane.init 0
push argument 0
push constant 1
add
pop static 0
push argument 1
push constant 1
sub
pop static 1
push constant 0
return
function WaterLane.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push constant 5
call Array.new 1
pop this 1
push argument 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push this 1
add
push constant 3
neg
push static 0
push this 0
push constant 1
add
push constant 48
push constant 1
push constant 0
push constant 0
not
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 3
neg
push constant 200
push this 0
push constant 1
add
push constant 0
push constant 1
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 3
neg
push constant 275
push this 0
push constant 1
add
push constant 0
push constant 1
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 3
neg
push constant 350
push this 0
push constant 1
add
push constant 0
push constant 1
push constant 0
not
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop this 2
label IF_FALSE0
push argument 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push this 1
add
push constant 2
push static 0
push this 0
push constant 1
add
push constant 0
push constant 1
push constant 0
push constant 0
push constant 0
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 2
push constant 170
push this 0
push constant 1
add
push constant 0
push constant 1
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 2
push constant 255
push this 0
push constant 1
add
push constant 0
push constant 1
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 2
push constant 350
push this 0
push constant 1
add
push static 1
push constant 350
sub
push constant 1
push constant 0
push constant 0
not
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop this 2
label IF_FALSE1
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push this 1
add
push constant 4
push static 0
push this 0
push constant 1
add
push constant 0
push constant 3
push constant 0
push constant 0
push constant 0
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 4
push constant 160
push this 0
push constant 1
add
push constant 0
push constant 3
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 4
push constant 300
push this 0
push constant 1
add
push constant 0
push constant 3
push constant 0
push constant 0
not
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop this 2
label IF_FALSE2
push argument 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
push this 1
add
push constant 2
neg
push constant 170
push this 0
push constant 1
add
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 2
neg
push constant 235
push this 0
push constant 1
add
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 2
neg
push constant 300
push this 0
push constant 1
add
push constant 0
push constant 0
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 2
neg
push constant 370
push this 0
push constant 1
add
push constant 0
push constant 0
push constant 0
not
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
not
pop this 2
label IF_FALSE3
push argument 1
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
push this 1
add
push constant 3
push static 0
push this 0
push constant 1
add
push constant 0
push constant 2
push constant 0
push constant 0
push constant 0
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 3
push constant 135
push this 0
push constant 1
add
push constant 0
push constant 2
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 1
add
push constant 3
push constant 235
push this 0
push constant 1
add
push constant 0
push constant 2
push constant 0
push constant 0
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 1
add
push constant 3
push constant 335
push this 0
push constant 1
add
push constant 0
push constant 2
push constant 0
push constant 0
not
push constant 0
not
call Log.new 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop this 2
label IF_FALSE4
push pointer 0
return
function WaterLane.updateLogs 2
push argument 0
pop pointer 0
push constant 0
pop this 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call Log.isActive 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Log.move 1
pop temp 0
label IF_FALSE1
push local 1
call Log.isGrowing 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop this 2
label IF_FALSE2
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function WaterLane.drawLogs 2
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push static 0
push this 0
push static 1
push this 0
push constant 16
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call Log.isActive 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Log.draw 1
pop temp 0
goto IF_END1
label IF_FALSE1
push this 2
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
call Log.reset 1
pop temp 0
label IF_FALSE2
label IF_END1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function WaterLane.checkCollision 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 1
push local 1
call Log.getLeftEdge 1
push argument 2
lt
push local 1
call Log.getRightEdge 1
push argument 1
lt
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Log.getVelocity 1
return
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function WaterLane.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
